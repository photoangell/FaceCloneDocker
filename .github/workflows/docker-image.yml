name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - uses: actions/checkout@v4

    # Step 2: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}   # Docker Hub username stored as a secret
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}  # Docker Hub access token stored as a secret

    # Step 3: Set up an environment variable to store the datestamp and git commit
    - name: Set up datestamp and git commit tag
      run: echo "IMAGE_TAG=$(date +'%y%m%d')-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    # Step 4: Build the Docker image with both the timestamp tag and latest
    - name: Build the Docker image
      run: docker buildx build . --file Dockerfile --platform linux/amd64 --tag photoangell/ymbbt-faceclone-dev:${{ env.IMAGE_TAG }} --tag photoangell/ymbbt-faceclone-dev:latest

    # Step 5: Push the Docker image to Docker Hub
    - name: Push the Docker image
      run: |
        echo "Pushing the Docker image with tag: ${{ env.IMAGE_TAG }}..."
        docker push photoangell/ymbbt-faceclone-dev:${{ env.IMAGE_TAG }}
        docker push photoangell/ymbbt-faceclone-dev:latest

    # Step 6: Configure notifications for build failures and successes
    - name: Notify build status
      if: always()
      run: |
        if [ ${{ job.status }} == 'failure' ]; then
          echo "Build failed"
        else
          echo "Build succeeded"
        fi
